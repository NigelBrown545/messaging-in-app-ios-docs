{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/smiclientcore\/smicoredelegate\/core:conversation:didreceiveentries:paged:"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"core:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id<SMICoreClient>","preciseIdentifier":"c:Qoobjc(pl)SMICoreClient","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"core","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"conversation:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id<SMIConversation>","preciseIdentifier":"c:Qoobjc(pl)SMIConversation","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"conversation","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"didReceiveEntries:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSArray<id<SMIConversationEntry>>","preciseIdentifier":"c:Q$objc(cs)NSArray","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"entries","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"paged:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BOOL","preciseIdentifier":"c:@T@BOOL","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"paged","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SMICoreClient"},{"type":"text","text":" instance that is managing the current connection."}],"type":"paragraph"}],"name":"core"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SMIConversation"},{"text":" instance that owns the emitted entries.","type":"text"}]}],"name":"conversation"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The array of "},{"type":"codeVoice","code":"SMIConversationEntry"},{"type":"text","text":" data models. Each entry represents an incoming\/outgoing message."}]}],"name":"entries"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Indicates whether this event was fired as a result of a database paging request. These entries are a result of requesting additional or missing entries from the local database populated from the service.","type":"text"}]}],"name":"paged"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The subject on the sender can be checked to determine whether a specific entry was sent by a local"},{"type":"text","text":" "},{"type":"text","text":"participant."}]},{"type":"paragraph","inlineContent":[{"text":"Outbound entries are echoed back on this event due to the chance it could be modified","type":"text"},{"text":" ","type":"text"},{"text":"by any configured sensitive data rules. This event is also an acknowledgement that","type":"text"},{"text":" ","type":"text"},{"text":"the entries have been cached locally.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The best practice, if choosing to display outgoing entries, is to wait for this event rather"},{"type":"text","text":" "},{"type":"text","text":"than displaying entries directly."}]}],"kind":"content"}],"metadata":{"role":"symbol","externalID":"c:objc(pl)SMICoreDelegate(im)core:conversation:didReceiveEntries:paged:","fragments":[{"text":"- ","kind":"text"},{"text":"core:conversation:didReceiveEntries:paged:","kind":"identifier"}],"navigatorTitle":[{"text":"core:conversation:didReceiveEntries:paged:","kind":"identifier"}],"title":"core:conversation:didReceiveEntries:paged:","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"SMIClientCore"}]},"hierarchy":{"paths":[["doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore","doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore\/SMICoreDelegate"]]},"identifier":{"url":"doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore\/SMICoreDelegate\/core:conversation:didReceiveEntries:paged:","interfaceLanguage":"occ"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Delegate event that is triggered when entries have been added to a conversation."},{"type":"text","text":" "},{"type":"text","text":"This fires for both inbound and outbound entries."}],"references":{"doc://com.salesforce.SMIClientCore/documentation/SMIClientCore/SMICoreDelegate/core:conversation:didReceiveEntries:paged:":{"abstract":[{"type":"text","text":"Delegate event that is triggered when entries have been added to a conversation."},{"type":"text","text":" "},{"type":"text","text":"This fires for both inbound and outbound entries."}],"title":"core:conversation:didReceiveEntries:paged:","navigatorTitle":[{"kind":"identifier","text":"core:conversation:didReceiveEntries:paged:"}],"role":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"core:conversation:didReceiveEntries:paged:"}],"url":"\/documentation\/smiclientcore\/smicoredelegate\/core:conversation:didreceiveentries:paged:","type":"topic","identifier":"doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore\/SMICoreDelegate\/core:conversation:didReceiveEntries:paged:","kind":"symbol"},"doc://com.salesforce.SMIClientCore/documentation/SMIClientCore":{"role":"collection","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore","url":"\/documentation\/smiclientcore","title":"SMIClientCore"},"doc://com.salesforce.SMIClientCore/documentation/SMIClientCore/SMICoreDelegate":{"fragments":[{"kind":"identifier","text":"SMICoreDelegate"}],"type":"topic","title":"SMICoreDelegate","kind":"symbol","url":"\/documentation\/smiclientcore\/smicoredelegate","identifier":"doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore\/SMICoreDelegate","abstract":[{"type":"text","text":"Delegate used to receive events for the "},{"code":"SMICoreClient","type":"codeVoice"},{"type":"text","text":" framework. Use this protocol to listen"},{"type":"text","text":" "},{"type":"text","text":"for chat messages, receive message status changes, detect network status changes, and receive error messages."}],"role":"symbol"}}}