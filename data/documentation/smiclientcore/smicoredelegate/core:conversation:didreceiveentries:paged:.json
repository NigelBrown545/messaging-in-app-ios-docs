{"variants":[{"paths":["\/documentation\/smiclientcore\/smicoredelegate\/core:conversation:didreceiveentries:paged:"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"symbolKind":"method","fragments":[{"text":"- ","kind":"text"},{"text":"core:conversation:didReceiveEntries:paged:","kind":"identifier"}],"roleHeading":"Instance Method","navigatorTitle":[{"kind":"identifier","text":"core:conversation:didReceiveEntries:paged:"}],"title":"core:conversation:didReceiveEntries:paged:","externalID":"c:objc(pl)SMICoreDelegate(im)core:conversation:didReceiveEntries:paged:","role":"symbol","modules":[{"name":"SMIClientCore"}]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore\/SMICoreDelegate\/core:conversation:didReceiveEntries:paged:"},"hierarchy":{"paths":[["doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore","doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore\/SMICoreDelegate"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"preciseIdentifier":"c:v","kind":"typeIdentifier","text":"void"},{"kind":"text","text":") "},{"kind":"identifier","text":"core:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:Qoobjc(pl)SMICoreClient","kind":"typeIdentifier","text":"id<SMICoreClient>"},{"kind":"text","text":") "},{"kind":"internalParam","text":"core"},{"kind":"text","text":" "},{"kind":"identifier","text":"conversation:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:Qoobjc(pl)SMIConversation","kind":"typeIdentifier","text":"id<SMIConversation>"},{"kind":"text","text":") "},{"kind":"internalParam","text":"conversation"},{"kind":"text","text":" "},{"kind":"identifier","text":"didReceiveEntries:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:Q$objc(cs)NSArray","kind":"typeIdentifier","text":"NSArray<id<SMIConversationEntry>>"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"entries"},{"kind":"text","text":" "},{"kind":"identifier","text":"paged:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@T@BOOL","kind":"typeIdentifier","text":"BOOL"},{"kind":"text","text":") "},{"kind":"internalParam","text":"paged"},{"kind":"text","text":";"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"SMICoreClient","type":"codeVoice"},{"text":" instance that is managing the current connection.","type":"text"}]}],"name":"core"},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SMIConversation"},{"type":"text","text":" instance that owns the emitted entries."}],"type":"paragraph"}],"name":"conversation"},{"content":[{"inlineContent":[{"text":"The array of ","type":"text"},{"type":"codeVoice","code":"SMIConversationEntry"},{"text":" data models. Each entry represents an incoming\/outgoing message.","type":"text"}],"type":"paragraph"}],"name":"entries"},{"content":[{"inlineContent":[{"text":"Indicates whether this event was fired as a result of a database paging request. These entries are a result of requesting additional or missing entries from the local database populated from the service.","type":"text"}],"type":"paragraph"}],"name":"paged"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The subject on the sender can be checked to determine whether a specific entry was sent by a local"},{"type":"text","text":" "},{"type":"text","text":"participant."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Outbound entries are echoed back on this event due to the chance it could be modified"},{"type":"text","text":" "},{"type":"text","text":"by any configured sensitive data rules. This event is also an acknowledgement that"},{"type":"text","text":" "},{"type":"text","text":"the entries have been cached locally."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The best practice, if choosing to display outgoing entries, is to wait for this event rather"},{"type":"text","text":" "},{"type":"text","text":"than displaying entries directly."}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Delegate event that is triggered when entries have been added to a conversation."},{"type":"text","text":" "},{"type":"text","text":"This fires for both inbound and outbound entries."}],"kind":"symbol","sections":[],"references":{"doc://com.salesforce.SMIClientCore/documentation/SMIClientCore/SMICoreDelegate":{"kind":"symbol","role":"symbol","url":"\/documentation\/smiclientcore\/smicoredelegate","title":"SMICoreDelegate","identifier":"doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore\/SMICoreDelegate","fragments":[{"kind":"identifier","text":"SMICoreDelegate"}],"type":"topic","abstract":[{"type":"text","text":"Delegate used to receive events for the "},{"type":"codeVoice","code":"SMICoreClient"},{"type":"text","text":" framework. Use this protocol to listen"},{"type":"text","text":" "},{"type":"text","text":"for chat messages, receive message status changes, detect network status changes, and receive error messages."}]},"doc://com.salesforce.SMIClientCore/documentation/SMIClientCore":{"role":"collection","identifier":"doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore","url":"\/documentation\/smiclientcore","title":"SMIClientCore","kind":"symbol","type":"topic","abstract":[]},"doc://com.salesforce.SMIClientCore/documentation/SMIClientCore/SMICoreDelegate/core:conversation:didReceiveEntries:paged:":{"abstract":[{"type":"text","text":"Delegate event that is triggered when entries have been added to a conversation."},{"type":"text","text":" "},{"type":"text","text":"This fires for both inbound and outbound entries."}],"url":"\/documentation\/smiclientcore\/smicoredelegate\/core:conversation:didreceiveentries:paged:","role":"symbol","type":"topic","title":"core:conversation:didReceiveEntries:paged:","identifier":"doc:\/\/com.salesforce.SMIClientCore\/documentation\/SMIClientCore\/SMICoreDelegate\/core:conversation:didReceiveEntries:paged:","fragments":[{"text":"- ","kind":"text"},{"text":"core:conversation:didReceiveEntries:paged:","kind":"identifier"}],"navigatorTitle":[{"text":"core:conversation:didReceiveEntries:paged:","kind":"identifier"}],"kind":"symbol"}}}